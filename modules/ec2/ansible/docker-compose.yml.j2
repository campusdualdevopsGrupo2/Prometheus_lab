services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=tuemail@ejemplo.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/efs/traefik/letsencrypt:/letsencrypt"  # Volumen en EFS para certificados
    labels:
      - "traefik.enable=true"
    restart: always

  prometheus:
    command: ["sh", "-c", "sudo chown -R 1000:1000 /prometheus && mkdir -p /prometheus/data && exec prometheus --config.file=/prometheus/config/prometheus.yml --storage.tsdb.path=/prometheus/data --web.config.file=/prometheus/config/web.yml"]
    build: .
    ports:
      - "9090:9090"
    volumes:
      - "/mnt/efs/prometheus:/prometheus"  # Volumen en EFS para datos de Prometheus
     
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myapp.rule=Host(`prometheus.{{ server_ip }}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
    depends_on:
      - otel-collector
    restart: always

  myapp:
    image: python:3.10.12
    working_dir: /mnt/efs/app
    command: ["/bin/bash", "-c", "pip install --no-cache-dir -r ./requirements.txt && chmod +x ./main.py && python ./main.py"]
    ports:
      - "8000:8000"
    volumes:
      - "/home/ubuntu/src:/mnt/efs/app"
    environment:
      - ENV=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317  # Aqu√≠ configuramos la variable de entorno
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.myapp.rule=Host(`myapp.{{ server_ip }}`)"
      - "traefik.http.routers.myapp.entrypoints=web,websecure"
      - "traefik.http.services.myapp.loadbalancer.server.port=8000"
    depends_on:
      - otel-collector
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config", "/otel/conf/otel-collector-config.yml"]
    ports:
      - "4317:4317"
      - "8889:8889"
      - "13133:13133"
    labels:
      - "traefik.http.routers.myapp.rule=Host(`myapp.{{ server_ip }}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.enable=true"
    volumes:
      - "/mnt/efs/otel:/otel"
    restart: always








