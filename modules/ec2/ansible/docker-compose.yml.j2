services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
 #     - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
 #     - "--certificatesresolvers.myresolver.acme.email=tuemail@ejemplo.com"
 #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
 #     - "chmod 600 /letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/mnt/efs/traefik/letsencrypt:/letsencrypt"  # Volumen en EFS para certificados
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web,websecure"
      - "traefik.http.routers.traefik.rule=Host(`{{ server_ip }}.campusdual.mkcampus.com`)"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"
    restart: always
    networks:
      - my_custom_network

  prometheus:
    command: ["sh", "-c", "sudo chown -R 1000:1000 /prometheus && mkdir -p /prometheus/data && exec prometheus --config.file=/prometheus/config/prometheus.yml --storage.tsdb.path=/prometheus/data --web.config.file=/prometheus/config/web.yml"]
    build:
      context: .
      dockerfile: Dockerfile.prometheus
    ports:
      - "9090:9090"
    volumes:
      - "/mnt/efs/prometheus:/prometheus"  # Volumen en EFS para datos de Prometheus
     
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.rule=Host(`{{ server_ip }}.campusdual.mkcampus.com`)&& PathPrefix(`/prom`)"
      - "traefik.http.routers.prometheus.entrypoints=web,websecure"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

      # Definir un middleware para cambiar el path
      - "traefik.http.middlewares.prometheus-replacepath.replacepath.path=/"

      # Aplicar el middleware al enrutador de Prometheus
      - "traefik.http.routers.prometheus.middlewares=prometheus-replacepath@docker"
    depends_on:
      otel-collector:
        condition: service_started
    restart: always
    networks:
      - my_custom_network

  myapp:
    image: python:3.10.12
    working_dir: /mnt/efs/app
    command: ["/bin/bash", "-c", "pip install --no-cache-dir -r ./requirements.txt && chmod +x ./main.py && python ./main.py"]
    ports:
      - "8000:8000"
    volumes:
      - "/home/ubuntu/src:/mnt/efs/app"
    environment:
      - ENV=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317  # Aqu√≠ configuramos la variable de entorno
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.myapp.tls.certresolver=myresolver"
      - "traefik.http.routers.myapp.rule=Host(`{{ server_ip }}.campusdual.mkcampus.com`)&& PathPrefix(`/myapp/`)"
      - "traefik.http.routers.myapp.entrypoints=web,websecure"
      - "traefik.http.services.myapp.loadbalancer.server.port=8000"
    depends_on:
      otel-collector:
        condition: service_started
    restart: always
    networks:
      - my_custom_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config", "/otel/conf/otel-collector-config.yml"]
    ports:
      - "4317:4317"
      - "8889:8889"
      - "13133:13133"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.otel.tls.certresolver=myresolver"
      - "traefik.http.routers.otel.rule=Host(`{{ server_ip }}.campusdual.mkcampus.com`)&& PathPrefix(`/otel`)"
      - "traefik.http.routers.otel.entrypoints=web,websecure"
      - "traefik.http.services.otel.loadbalancer.server.port=8889"
    volumes:
      - "/mnt/efs/otel:/otel"
    restart: always
    networks:
      - my_custom_network

  

  nagios:
    image: jasonrivers/nagios:latest
    command: ["/bin/bash", "-c", "htpasswd -cb /opt/nagios/etc/htpasswd.users nagiosadmin campusdual && exec /usr/local/bin/start_nagios"]
    container_name: nagios
    ports:
      - "8081:80"
    #post_start:
    #  - command: mv /nagios/nagios_config/hosts.cfg /opt/nagios/etc/hosts.cfg && mv /nagios/nagios_config/services.cfg /opt/nagios/etc/services.cfg 
    #    user: root
    environment:
      - NAGIOS_HOST_IP=172.28.0.10
      - cfg_file=/nagios/nagios_config/hosts.cfg 
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.nagios.tls.certresolver=myresolver"
      - "traefik.http.routers.nagios.rule=Host(`{{ server_ip }}.campusdual.mkcampus.com`)&& PathPrefix(`/nagios`)"
      - "traefik.http.routers.nagios.entrypoints=web,websecure"
      - "traefik.http.services.nagios.loadbalancer.server.port=8081"

            # Definir un middleware para cambiar el path
      - "traefik.http.middlewares.nagios-replacepath.replacepath.path=/"

      # Aplicar el middleware al enrutador de Prometheus
      - "traefik.http.routers.nagios.middlewares=nagios-replacepath@docker"
    volumes:
      - "/mnt/efs/nagios:/nagios" 
    restart: always
    networks:
      my_custom_network:
        ipv4_address: 172.28.0.10
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 1g

  
networks:
  my_custom_network:
    driver: bridge
    ipam:
      driver: default  # El driver de IPAM por defecto
      config:
        - subnet: "172.28.0.0/24"  # Rango de IP para esta red
          gateway: "172.28.0.1"  # IP del gateway de la red

